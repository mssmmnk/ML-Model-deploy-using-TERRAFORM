##Define provider ##first step defines the provider region
provider "aws" {
    region = "eu-central-1"
}

##VPC creating - second step because provides the networking foundation for resources 
resource "aws_vpc" "my_vpc" {
    cidr_block = xx.x.x.x/xx" ##xx.x.x is network adress and /xx number of slash indicates the subnet and the number as it self means that the first xx bits of the IP are fiexd to define the network portion

}


##IAM role - defines the necessary permissions for the EKS cluster to interact with other aws sercives and resources. The IAM role allows the EKS cluster to manage and provision resources on your behalf.
resource "aws_iam_role" "my_eks_role"{
    name="my-eks-role"

    assume_role_policy = <<EOF ##EOF is a heredoc syntay used in Terraform to define a multline string. Te content between <<EOF and EOF is the policy document in JSON format
{
    "Version": "xxxx-xx-xx", ##specifies the version
    "Statement": [
        {"Action": "sts:AssumeRole",
        "Principal": {
            "Service": "eks.amatonaws.com"
        },
        "Effect": "Allow",
        "Sid": ""} ##optional statement (Statment ID) It can be used for managing and referencing specific statements within a policy document.
    ]
}    
EOF
}

##EKS cluster ##EKS cluster provisions the Kubernetes control plane and orchestrates containerized applications on worker nodes
resource "aws_eks_cluster" "my_cluster" {
    name = "my-cluster"
    role_arn = aws_iam_role.my_eks_role.role_arn ##the atribute role_arn specifies the Amazon Resource Name(ARN) of the IAM role that will be associated with the EKS cluster.
    version = "y.yy" ##kubernetes version
    vpc_config {
        subnet_ids=[aws_subnet.my_subnets.*.id] ##subnet_ids acess aws_subnet(named my_subnets) and accesses the 'id' attribute of each subnet. The * is a wildcard that tells terraform to collect all the subnet IDs generated by the aws_subnet resource

    }
}

##subnets - provides the network segments within the VPC where worker nodes and other resources will be deployed. Subnets define the Ip adress ranges and availability zones for your resources.
resource "aws_subnet" "my_subnets" {
    count = x ##specifies how many subnets should be created
    vpc_id = aws_vpc.my_vpy_id
    cidr_block = cidrsubnet(aws_vpc.my_vpc.cidr_block, 8, count.index) ##cidrsubnet is a Terraform function used to compute a new CIDR block based on an existing CIDR block
    availability_zone = "eu-central-1${count.index + 1}" ##specifies the availability zone value for each subnet by incrementing the index
}